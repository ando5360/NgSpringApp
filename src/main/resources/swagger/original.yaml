openapi: 3.0.0
info:
  description: API for managing users and groups
  title: User and Group Administration API
  version: 1.0.0
servers:
- description: Main (production) server
  url: http://api.example.com/v1
security:
- ApiKeyAuth: []
- OAuth2:
  - read
  - write
  - admin
paths:
  /users:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/User'
                type: array
          description: A list of users
      security:
      - ApiKeyAuth: []
      - OAuth2:
        - read
      summary: Get a list of users
      x-accepts: application/json
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        "201":
          description: User created successfully
      security:
      - ApiKeyAuth: []
      - OAuth2:
        - write
      summary: Create a new user
      x-contentType: application/json
      x-accepts: application/json
      x-content-type: application/json
  /users/{userId}:
    delete:
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: User deleted successfully
      security:
      - ApiKeyAuth: []
      - OAuth2:
        - admin
      summary: Delete a user by ID
      x-accepts: application/json
    get:
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: A user object
      security:
      - ApiKeyAuth: []
      - OAuth2:
        - read
      summary: Get a user by ID
      x-accepts: application/json
    put:
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        "200":
          description: User updated successfully
      security:
      - ApiKeyAuth: []
      - OAuth2:
        - write
      summary: Update a user by ID
      x-contentType: application/json
      x-accepts: application/json
      x-content-type: application/json
  /groups:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Group'
                type: array
          description: A list of groups
      security:
      - ApiKeyAuth: []
      - OAuth2:
        - read
      summary: Get a list of groups
      x-accepts: application/json
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
        required: true
      responses:
        "201":
          description: Group created successfully
      security:
      - ApiKeyAuth: []
      - OAuth2:
        - write
      summary: Create a new group
      x-contentType: application/json
      x-accepts: application/json
      x-content-type: application/json
  /groups/{groupId}:
    delete:
      parameters:
      - explode: false
        in: path
        name: groupId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: Group deleted successfully
      security:
      - ApiKeyAuth: []
      - OAuth2:
        - admin
      summary: Delete a group by ID
      x-accepts: application/json
    get:
      parameters:
      - explode: false
        in: path
        name: groupId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: A group object
      security:
      - ApiKeyAuth: []
      - OAuth2:
        - read
      summary: Get a group by ID
      x-accepts: application/json
    put:
      parameters:
      - explode: false
        in: path
        name: groupId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
        required: true
      responses:
        "200":
          description: Group updated successfully
      security:
      - ApiKeyAuth: []
      - OAuth2:
        - write
      summary: Update a group by ID
      x-contentType: application/json
      x-accepts: application/json
      x-content-type: application/json
components:
  schemas:
    User:
      example:
        firstName: firstName
        lastName: lastName
        groups:
        - null
        - null
        id: 0
        email: email
        username: username
      properties:
        id:
          format: int64
          type: integer
        username:
          type: string
        email:
          format: email
          type: string
        firstName:
          type: string
        lastName:
          type: string
        groups:
          items:
            $ref: '#/components/schemas/Group'
          type: array
      required:
      - email
      - id
      - username
      type: object
    Group:
      enum:
      - Management
      - FrontlineEmployee
      - SupportTeam
      - AdministrativeStaff
      - SpecializedDepartment
      - ExternalUser
      - SpecializedRole
      - ITProjectTeam
      type: string
    Role:
      enum:
      - CLevel
      - CallCenterManager
      - TeamLeader
      - QualityAssuranceManager
      - OperationsManager
      - CustomerServiceRep
      - TechnicalSupportAgent
      - SalesRep
      - OutboundTelemarketer
      - ITSupportStaff
      - NetworkAdmin
      - DatabaseAdmin
      - SecurityAnalyst
      - HelpDeskTechnician
      - HRPersonnel
      - PayrollAdmin
      - OfficeManager
      - AdminAssistant
      - TrainingStaff
      - WorkforceManagement
      - BusinessAnalyst
      - DataAnalyst
      - RemoteWorker
      - ContractWorker
      - Vendor
      - Auditor
      - RealTimeAnalyst
      - CallQualityMonitor
      - KnowledgeBaseAdmin
      - ChatbotTechnician
      - SoftwareDeveloper
      - QATester
      - ProjectManager
      - SystemsIntegrator
      type: string
  securitySchemes:
    ApiKeyAuth:
      in: header
      name: X-API-Key
      type: apiKey
    OAuth2:
      flows:
        authorizationCode:
          authorizationUrl: https://btcallcenter.com/oauth/authorize
          scopes:
            read: Grants read access
            write: Grants write access
            admin: Grants access to admin operations
          tokenUrl: https://btcallcenter.com/oauth/token
      type: oauth2
