/*
 * User and Group Administration API
 * API for managing users and groups
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.ando5360.middleware.dao;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Gets or Sets Group
 */
@JsonAdapter(Group.Adapter.class)
public enum Group {
  
  MANAGEMENT("Management"),
  
  FRONTLINEEMPLOYEE("FrontlineEmployee"),
  
  SUPPORTTEAM("SupportTeam"),
  
  ADMINISTRATIVESTAFF("AdministrativeStaff"),
  
  SPECIALIZEDDEPARTMENT("SpecializedDepartment"),
  
  EXTERNALUSER("ExternalUser"),
  
  SPECIALIZEDROLE("SpecializedRole"),
  
  ITPROJECTTEAM("ITProjectTeam");

  private String value;

  Group(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static Group fromValue(String value) {
    for (Group b : Group.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<Group> {
    @Override
    public void write(final JsonWriter jsonWriter, final Group enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public Group read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return Group.fromValue(value);
    }
  }
}

