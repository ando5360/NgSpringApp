openapi: 3.0.0
info:
  title: User and Group Administration API
  description: API for managing users and groups
  version: 1.0.0
servers:
  - url: http://api.example.com/v1
    description: Main (production) server

paths:
  /users:
    get:
      summary: Get a list of users
      responses:
        '200':
          description: A list of users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
    post:
      summary: Create a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: User created successfully

  /users/{userId}:
    get:
      summary: Get a user by ID
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: A user object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    put:
      summary: Update a user by ID
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: User updated successfully
    delete:
      summary: Delete a user by ID
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: User deleted successfully

  /groups:
    get:
      summary: Get a list of groups
      responses:
        '200':
          description: A list of groups
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group'
    post:
      summary: Create a new group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
      responses:
        '201':
          description: Group created successfully

  /groups/{groupId}:
    get:
      summary: Get a group by ID
      parameters:
        - name: groupId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: A group object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
    put:
      summary: Update a group by ID
      parameters:
        - name: groupId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
      responses:
        '200':
          description: Group updated successfully
    delete:
      summary: Delete a group by ID
      parameters:
        - name: groupId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Group deleted successfully

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
        username:
          type: string
        email:
          type: string
          format: email
        firstName:
          type: string
        lastName:
          type: string
        groups:
          type: array
          items:
            $ref: '#/components/schemas/Group'
      required:
        - username
        - email

    Group:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        description:
          type: string
        members:
          type: array
          items:
            $ref: '#/components/schemas/User'
      required:
        - name